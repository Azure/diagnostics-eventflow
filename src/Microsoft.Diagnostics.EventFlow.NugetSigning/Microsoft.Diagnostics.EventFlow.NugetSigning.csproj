<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\..\packages\MicroBuild.Core.0.3.0\build\MicroBuild.Core.props" Condition="Exists('..\..\packages\MicroBuild.Core.0.3.0\build\MicroBuild.Core.props')" />
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{C1CB9BDC-2F26-46AA-9F2C-F9C12E9A3418}</ProjectGuid>
    <OutputType>Library</OutputType>
    <RootNamespace>Microsoft.Diagnostics.EventFlow.NugetSigning</RootNamespace>
    <AssemblyName>Microsoft.Diagnostics.EventFlow.NugetSigning</AssemblyName>
    <TargetFrameworkVersion>v4.6</TargetFrameworkVersion>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugSymbols>false</DebugSymbols>
    <DebugType>None</DebugType>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <OutputPath>bin\Debug\</OutputPath>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <OutputPath>bin\Release\</OutputPath>
  </PropertyGroup>
  
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Dummy.cs" />
  </ItemGroup>
  
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\..\packages\MicroBuild.Core.0.3.0\build\MicroBuild.Core.props')" Text="$([System.String]::Format('$(ErrorText)', '..\..\packages\MicroBuild.Core.0.3.0\build\MicroBuild.Core.props'))" />
    <Error Condition="!Exists('..\..\packages\MicroBuild.Core.0.3.0\build\MicroBuild.Core.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\..\packages\MicroBuild.Core.0.3.0\build\MicroBuild.Core.targets'))" />
  </Target>
  <Import Project="..\..\packages\MicroBuild.Core.0.3.0\build\MicroBuild.Core.targets" Condition="Exists('..\..\packages\MicroBuild.Core.0.3.0\build\MicroBuild.Core.targets')" />
  
  <!--
    The signing task expect the packages to sign to be located under some certain folder. So before signing, we move the packages to the expected folder, and after signing, we move the signed packages back to their original place.
  -->
  <Target Name="MovePackagesBeforeSigning" Condition="'$(SignType)'!=''" BeforeTargets="SignFiles">
    <ItemGroup>
      <NugetPackages Include="..\..\nugets\*.nupkg" />
    </ItemGroup>
    <Move SourceFiles="@(NugetPackages)" DestinationFolder="$(OutputPath)\nugets" />
  </Target>
  <ItemGroup>
    <FilesToSign Include="$(OutputPath)\nugets\*.nupkg">
      <Authenticode>Nuget</Authenticode>
    </FilesToSign>
  </ItemGroup>
  <Target Name="MovePackagesAfterSigning" Condition="'$(SignType)'!=''" AfterTargets="SignFiles">
    <ItemGroup>
      <SignedNugetPackages Include="$(OutputPath)\nugets\*.nupkg" />
    </ItemGroup>
    <Move SourceFiles="@(SignedNugetPackages)" DestinationFolder="..\..\nugets" />
  </Target>
</Project>